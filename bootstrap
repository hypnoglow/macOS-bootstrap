#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname ${BASH_SOURCE[0]})"
self_dir="$(dirname "$(pwd -P)/$(basename ${BASH_SOURCE[0]})")"
cd - 1>/dev/null

preload() {
    . "${self_dir}/lib/ask.sh"
    . "${self_dir}/lib/log.sh"

    . "${self_dir}/scripts/apps.sh"
    . "${self_dir}/scripts/brew.sh"
    . "${self_dir}/scripts/mas.sh"
    . "${self_dir}/scripts/tweaks.sh"
}

valid_profile() {
    profiles=(
        antares
        pollux
        rigel
    )

    printf '%s\0' "${profiles[@]}" | grep -q -F -x -z -- "${1}"
    return $?
}

main() {
    preload

    ask::construct true

    profile_name="${1:-}"
    if [[ -n "${profile_name}" ]] ; then
        if ! valid_profile "${profile_name}" ; then
            log::error "Profile name '${profile_name}' is unknown."
            exit 1
        fi
    else
        hostname="$(scutil --get ComputerName)"
        if [[ -n "${hostname}" ]] && valid_profile "${hostname}"; then
            profile_name="${hostname}"
        fi
        if [[ -z "${profile_name}" ]] ; then
            log::error "Profile name not specified. Run \"./bootstrap <profile_name>\" to specify."
            exit 1
        fi
    fi

    log::info "Bootstrap started for profile \"${profile_name}\"."

    if ask::interactive "Check macOS Software Updates?"; then
        updates=$(softwareupdate -l -a 2>&1)
        echo -e "$updates"
        if [ -n "$updates" ] && ! echo "$updates" | grep -q "No new software available" && ask::interactive "Install Software Updates?"; then
            softwareupdate -i -a
        fi
    fi

    brew::install_homebrew
    brew::update
    brew::upgrade_core
    brew::upgrade_cask "${self_dir}/profiles/${profile_name}/brew_cask_pinned.list"

    brew::reconcile "${self_dir}/profiles/${profile_name}/brew.list"
    mas::reconcile "${self_dir}/profiles/${profile_name}/mas.list"

    apps::install_go_apps
    apps::install_gh_extensions

    tweaks::hostname ${profile_name}
    tweaks::switch_to_zsh
    # TODO: temporary disabled, investigate.
    #tweaks::set_screenshots_dir

    # Make some dirs
    mkdir -p ${HOME}/go
    mkdir -p ${HOME}/Screenshots

    log::info "Done bootstrapping!"
}

main "$@"
exit 0
